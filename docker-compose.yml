services:
  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: ai-router-db
    environment:
      - POSTGRES_DB=ai_router
      - POSTGRES_USER=ai_router
      - POSTGRES_PASSWORD=ai_router_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ai_router -d ai_router" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Router application
  ai-router:
    build:
      context: .
      dockerfile: Dockerfile.multi
    container_name: ai-router
    ports:
      - "8000:8000"
    environment:
      # Core configuration
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - RUN_ENV=prod
      - LOG_LEVEL=INFO

      # Security configuration
      - API_KEY=your_production_api_key_here
      - SECURITY_API_KEY_REQUIRED=true

      # Database configuration
      - DATABASE_URL=postgresql://ai_router:ai_router_password@postgres:5432/ai_router

      # Redis configuration (if you add Redis service)
      - REDIS_URL=redis://redis:6379
    # volumes:
      # - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
